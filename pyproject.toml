[tool.poetry]
name = "korus5"
version = "0.1.0"
description = ""
authors = ["Pololoshka <sokolova.polya.98gmail.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "~3.12"
apache-airflow-providers-postgres = "^5.11.2"

[tool.poetry.group.dev.dependencies]
apache-airflow = "==2.9.2"
airflow-stubs = "^0.0.1"
ruff = "^0.5.0"
mypy = "^1.10.0"
sqlfluff = "^3.1.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
src = ["dags"]
target-version = "py312"
line-length = 100
show-fixes = true

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/#error-e
select = ["ALL"]
ignore = [
  "ANN",     # flake8-annotations
  "COM812",  # flake8-commas. Trailing comma missing
  "D",       # pydocstyle
  "INP001",  # flake8-no-pep420. Add an __init__.py.
  "ISC001",  # flake8-implicit-str-concat. Checks for implicitly concatenated strings on a single line
  "PLR2004", # pylint-refactor. Magic value used in comparison
  "TRY300",  # tryceratops. Consider moving this statement to an `else` block
]

[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true

[tool.ruff.lint.pylint]
allow-magic-value-types = ["int"]

[tool.ruff.lint.mccabe]
max-complexity = 8

[tool.mypy]
mypy_path = "dags"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true

# for strict mypy: (this is the tricky one :-))
disallow_untyped_defs = true

[tool.sqlfluff.core]
dialect = "postgres"
templater = "raw"
max_line_length = 140
fix_even_unparsable = true
exclude_rules = ["RF01", "RF03", "RF05"]


[tool.sqlfluff.indentation]
indent_unit = "space"
tab_space_size = 4

[tool.sqlfluff.rules.capitalisation.keywords]
capitalisation_policy = "upper"
